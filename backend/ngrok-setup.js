import ngrok from 'ngrok';
import dotenv from 'dotenv';

dotenv.config();

async function setupNgrok() {
  try {
    console.log('üöÄ Iniciando Ngrok...');
    
    // Configuraci√≥n de ngrok
    const url = await ngrok.connect({
      addr: 3001,
      authtoken: process.env.NGROK_AUTHTOKEN || '', // Opcional: tu token de ngrok
      region: 'us', // o 'eu', 'ap', 'au', 'sa'
      onStatusChange: (status) => {
        console.log(`üîÑ Estado de Ngrok: ${status}`);
      },
      onLogEvent: (data) => {
        console.log(`üìù Log Ngrok: ${data}`);
      }
    });
    
    console.log('='.repeat(50));
    console.log('‚úÖ NGROK CONECTADO EXITOSAMENTE');
    console.log('='.repeat(50));
    console.log(`üåê URL P√∫blica: ${url}`);
    console.log(`üìç URL Local: http://localhost:3001`);
    console.log('='.repeat(50));
    console.log('üí° Usa la URL p√∫blica para acceder desde cualquier dispositivo');
    console.log('='.repeat(50));
    
    return url;
  } catch (error) {
    console.error('‚ùå Error iniciando ngrok:', error.message);
    console.log('üí° Soluci√≥n:');
    console.log('1. Ejecuta: npm install ngrok');
    console.log('2. O instala ngrok globalmente: npm install -g ngrok');
    
    // Intentar m√©todo alternativo
    await tryAlternativeMethod();
  }
}

async function tryAlternativeMethod() {
  try {
    console.log('üîÑ Intentando m√©todo alternativo...');
    
    // M√©todo alternativo sin authtoken
    const url = await ngrok.connect(3001);
    console.log(`‚úÖ Ngrok conectado (m√©todo alternativo): ${url}`);
    return url;
  } catch (error) {
    console.error('‚ùå Tambi√©n fall√≥ el m√©todo alternativo:', error.message);
    console.log('üìã Posibles soluciones:');
    console.log('1. Instala ngrok: npm install ngrok');
    console.log('2. Descarga ngrok manualmente de https://ngrok.com/download');
    console.log('3. Agrega la ruta de ngrok al PATH de tu sistema');
    process.exit(1);
  }
}

// Manejar cierre graceful
process.on('SIGINT', async () => {
  console.log('\nüõë Deteniendo ngrok...');
  try {
    await ngrok.disconnect();
    await ngrok.kill();
    console.log('‚úÖ Ngrok detenido correctamente');
  } catch (error) {
    console.log('‚ö†Ô∏è Ngrok ya estaba detenido');
  }
  process.exit(0);
});

export default setupNgrok;

// Si se ejecuta directamente
if (import.meta.url === `file://${process.argv[1]}`) {
  setupNgrok();
}
